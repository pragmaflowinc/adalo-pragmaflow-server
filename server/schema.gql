# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AdaloUserSchema {
  OrganizationUser: OrganizationUserSchema!
  createdAt: String!
  developer: Boolean!
  email: String!
  id: Float!
  ip: String
  name: String!
  password: String!
  updatedAt: String!
}

type AppsSchema {
  acessedAt: String!
  createdAt: String!
  id: String!
  name: String!
  updatedAt: String!
}

type InvitationSchema {
  OrganizationId: Float!
  appId: String
  createdAt: String!
  createdByUserId: Float!
  email: String!
  expiresAt: String!
  id: Float!
  updatedAt: String!
}

type LibrarySchema {
  OrganizationLibrary: OrganizationLibrarySchema!
  createdAt: String!
  id: String!
  name: String
  updatedAt: String!
}

type Mutation {
  installComponent(componentId: String!, libraryName: String!, organizationId: String!, sessionToken: String!): Boolean!
  uninstallComponent(componentId: String!, organizationId: String!, sessionToken: String!): Boolean!
}

type OrganizationLibrarySchema {
  LibraryId: String!
  OrganizationId: Float!
  createdAt: String!
  updatedAt: String!
}

type OrganizationSchema {
  Invitations: [InvitationSchema!]!
  Libraries: [LibrarySchema!]!
  OrganizationUser: OrganizationUserSchema!
  Users: [AdaloUserSchema!]!
  active: Boolean!
  createdAt: String!
  id: Float!
  name: String!
  planType: String!
  rewardfulToken: String
  seenEndIntegrationTrial: Boolean!
  stripeCustomerId: String!
  subdomain: String!
  trialEndDate: String
  updatedAt: String!
}

type OrganizationUserSchema {
  OrganizationId: Float!
  UserId: Float!
  createdAt: String!
  isAdmin: Boolean!
  updatedAt: String!
}

type Query {
  getAdaloOrganizations(sessionToken: String!): [OrganizationSchema!]!
  getAdaloSession(email: String!, password: String!): String!
  getAppsList(sessionToken: String!): [AppsSchema!]!
  getBundle(appId: String!): String!
}
